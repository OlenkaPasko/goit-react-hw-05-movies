{"version":3,"file":"static/js/797.77f22f64.chunk.js","mappings":"6LAqEA,UAhEe,WACb,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAKpCG,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAaG,IAAI,SAAU,CAC7B,IAAMC,EAAQJ,EAAaK,IAAI,SAC/BC,MAAM,GAADC,OALQ,+BAMA,0BAAAA,OAPD,mCAOiC,0BAAAA,OAAyBH,EAAK,gCACzEI,MAAK,SAAAC,GAAG,OACRA,EAAIC,OAAOF,MAAK,SAAAG,GACdf,EAAgBe,EAAKC,QACvB,GAAE,GAEN,CACF,GAAG,CAACZ,IAEJ,IAKMa,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,SATa,SAAAC,GACrBA,EAAIC,iBACJnB,EAAgB,CAAEG,MAAOb,GAC3B,EAMmC0B,SAAA,EAC7BI,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,SAAU,SAACC,GAAC,OAAKhC,EAAcgC,EAAEC,OAAOC,MAAM,KAEhDL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQL,SAAC,cAEvBtB,EAAagC,OAAS,IACrBN,EAAAA,EAAAA,KAAA,MAAAJ,SACGtB,EAAaiC,KAAI,SAAAC,GAChB,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACnB,OACEX,EAAAA,EAAAA,KAAA,MAAAJ,UACEI,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,WAAA3B,OAAauB,GAAMK,MAAO,CAAEC,KAAMvB,GAAWI,SAClDc,GAASC,KAFLF,EAMb,OAGJT,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,MAGb,C","sources":["pages/MoviesPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation, Outlet } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const API_KEY = '9cbb52e6579c256183b59d31049fbf06';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n\n  useEffect(() => {\n    if (searchParams.has('query')) {\n      const query = searchParams.get('query');\n      fetch(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n      ).then(res =>\n        res.json().then(data => {\n          setSearchResult(data.results);\n        })\n      );\n    }\n  }, [searchParams]);\n\n  const onSubmitSearch = evt => {\n    evt.preventDefault();\n    setSearchParams({ query: inputValue });\n  };\n\n  const location = useLocation();\n\n  return (\n    <>\n      <form onSubmit={onSubmitSearch}>\n        <input\n          type=\"search\"\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchResult.length > 0 && (\n        <ul>\n          {searchResult.map(item => {\n            const { id, title, name } = item;\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title || name}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nMovies.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","searchResult","setSearchResult","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","has","query","get","fetch","concat","then","res","json","data","results","location","useLocation","_jsxs","_Fragment","children","onSubmit","evt","preventDefault","_jsx","type","onChange","e","target","value","length","map","item","id","title","name","Link","to","state","from","Outlet"],"sourceRoot":""}