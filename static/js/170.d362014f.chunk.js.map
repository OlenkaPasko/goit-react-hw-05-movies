{"version":3,"file":"static/js/170.d362014f.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionMovie = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  margin-right: 10px;\n`;\n\nexport const SectionAdd = styled.div`\n  display: block;\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SectionMovie, Img, SectionAdd } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const {\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    poster_path,\n    genres,\n  } = movie || [];\n\n  const location = useLocation();\n  const API_KEY = '9cbb52e6579c256183b59d31049fbf06';\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n      .then(res => {\n        if (!res.ok) {\n          setMovie('badRequest');\n          throw new Error(res.status);\n        }\n        return res.json();\n      })\n      .then(data => {\n        setMovie(data);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <button>Go back</button>\n      </Link>\n      {movie === 'badRequest' && (\n        <Img\n          src=\"https://img.freepik.com/free-vector/oops-404-error-with-broken-robot-concept-illustration_114360-5529.jpg?w=2000\"\n          alt=\"404\"\n          width=\"120px\"\n        />\n      )}\n      {movie && movie !== 'badRequest' && (\n        <>\n          <SectionMovie>\n            {poster_path ? (\n              <Img\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={name || title}\n                width=\"120px\"\n              />\n            ) : (\n              <Img\n                src=\"https://img.freepik.com/free-vector/oops-404-error-with-broken-robot-concept-illustration_114360-5529.jpg?w=2000\"\n                alt=\"404\"\n                width=\"120px\"\n              />\n            )}\n\n            <div>\n              <h1>\n                {title || name} &#40;{new Date(release_date).getFullYear()}&#41;\n              </h1>\n\n              <p>Rating: {vote_average}</p>\n              <h2>Overview </h2>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </SectionMovie>\n          <SectionAdd>\n            <p>Additional Information</p>\n            <ul>\n              <li>\n                <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </SectionAdd>\n\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string,\n    }),\n  }),\n};\n\nexport default MovieDetails;\n"],"names":["SectionMovie","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","SectionAdd","_templateObject3","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_ref","title","name","release_date","vote_average","overview","poster_path","genres","location","useLocation","useEffect","fetch","concat","then","res","ok","Error","status","json","data","_jsxs","_Fragment","children","_jsx","Link","to","state","from","src","alt","width","Date","getFullYear","map","genre","join","Outlet"],"sourceRoot":""}